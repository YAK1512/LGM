import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


data=pd.read_csv("http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data",
                names=['sepal length','sepal width','petal length','petal width','Class'])

data.head()

data.shape

data.isnull()

data.describe()

data.isnull.sum()

data.columns

data.max()

data.min()



sns.boxplot(x='Class',y='petal length',data=data)
plt.show()

sns.boxplot(x='Class',y='sepal length',data=data)
plt.show()


sns.boxplot(x='Class',y='petal width',data=data)
plt.show()


sns.pairplot(data,hue='Class')
plt.show()

plt.figure(figsize=(10,7))
sns.heatmap(data.corr(),annot=True,cmap='seismic')
plt.show()

from sklearn.preprocessing import LabelEncoder
le=  LabelEncoder()

data['Class']=le.fit_transform(data['Class'])
data.head()

x=data.drop(columns=['Class'])
y=data['Class']
x[:5]

y[:5]



from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=1)



from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score


lr=LogisticRegression()
knn=KNeighborsClassifier()
svm=SVC()
nb=GaussianNB()
dt=DecisionTreeClassifier()
rf=RandomForestClassifier()



results=pd.DataFrame({'Models':['LogisticRegression','KNeighborsClassifier','Support Vector Machine','Naive Bayes','Decision Tree','Random Forest'],'Accuracy':scores})
results=results.sort_values(by='Accuracy',ascending=False)
print(results)


